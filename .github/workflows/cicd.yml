# 워크플로의 이름 지정
name: CICD

# 워크플로가 시작될 조건 (main 브렌치에 push -> 워크플로 시작)
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    # 실행 스텝 지정
    steps:
      # 워크플로가 일어나는 환경에서 현재 저장소를 불러옴
      - uses: actions/checkout@v3

      # 자바 설치
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # gradlew 실행을 하기 위한 권한 부여
      - name: Grant excute permission for gradlew
        run: |
          chmod +x gradlew

      # 빌드
      - name: Build with Gradle
        run: |
          ./gradlew clean build -x test

      # 도커 허브 로그인
      - name: Docker hub login
        run : |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # 도커 파일을 빌드한 후 도커 허브에 push
      - name: Docker build & push to Docker repo
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }}:app .
          docker push ${{ secrets.DOCKER_REPO }}:app


      # 서버에 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}:app
            sudo docker-compose -f docker-compose.yml up -d
            docker image prune -f